name: Build Bilibili Auto Stream

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch: {}

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build executable
        shell: pwsh
        run: |
          mkdir build
          mkdir build\images
          Copy-Item -Path "images\*" -Destination "build\images\" -Recurse -Force
          pyinstaller `
            --onefile `
            --noconsole `
            --add-data "images;images" `
            --icon "images/icon.ico" `
            --name "B站直播助手" `
            --distpath "dist" `
            --workpath "build" `
            --specpath "build" `
            --clean `
            main.py

      - name: Prepare release files
        shell: pwsh
        run: |
          mkdir release
          Copy-Item -Path "dist\B站直播助手.exe" -Destination "release\" -Force
          Copy-Item -Path "config.json" -Destination "release\" -Force
          mkdir release\images
          Copy-Item -Path "images\*" -Destination "release\images\" -Recurse -Force
          $lines = @(
            "使用说明：",
            "",
            "1. 将所有文件放在同一目录下",
            "2. 首次运行会自动创建配置文件",
            "3. 右键系统托盘图标打开配置界面",
            "4. 设置开播/关播时间和关播方式",
            "",
            "注意事项：",
            "- 程序需要直播姬窗口保持可见状态",
            "- 程序需要以管理员权限运行，否则快捷键监听可能无效"
          )
          $lines | Set-Content -Path "release\README.txt" -Encoding UTF8

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: B站直播助手_v${{ github.ref_name }}
          path: release/
          retention-days: 7
